server.port: 9511

management:
  server.port: 9512
  health:
    defaults.enabled: true
    diskspace.enabled: false
  endpoints:
    web:
      base-path: /
      exposure.include: "*"
  endpoint:
    prometheus:
      enabled: true
    health:
      enabled: true
      show-details: never
    auditevents.enabled: false
  metrics:
    tags:
      application: ${spring.application.name}
      enable.jvm: true
      enable.jvm.gc.pause: true
      enable.jvm.memory: true
      enable.jvm.threads: true
      enable.process: true
      enable.process.files: true
      enable.http: true
      enable.http.server.requests: true
      enable.logback: true
      enable.system: true
  prometheus:
    metrics:
      export:
        enabled: true

spring:
  application:
    name: game-engine
  config:
    import: "optional:consul:"
  cloud:
    consul:
      discovery:
        prefer-ip-address: true
        health-check-path: /health
  kafka:
    bootstrap-servers: "localhost:9092"
    producer:
      retries: 3
      acks: all
      key-serializer: org.springframework.kafka.support.serializer.StringOrBytesSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    #      properties:
    #        - spring.json.type.mapping: WonderSeekerLocationUpdate:statefull.geofencing.faas.common.dto.WonderSeekerLocationUpdate
    consumer:
      group-id: ${spring.application.name}
      auto-offset-reset: earliest

  rsocket.server.port: 4789
#  spring.rsocket.server.transport=websocket
#  spring.rsocket.server.mapping-path=/rsocket

---
spring:
  config:
    activate:
      on-profile: local

---
spring:
  config:
    activate:
      on-profile: no-consul
