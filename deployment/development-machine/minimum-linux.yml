version: "3.7"
services:

  consul:
    container_name: consul
    hostname: consul
    image: consul
    ports:
      - "8500:8500"
      - "8300:8300"
    volumes:
      - ./metrics/consul.json:/consul/config/consul.json

  kafka:
    image: confluentinc/cp-server:7.3.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9101:9101"
    environment:
      KAFKA_CREATE_TOPICS: >-
        wonder-matcher-wonder-seeker-match-events-repartition:1:1,
        wonder-seeker-passive-like-events:1:1,
        dance-partner-events:1:1,
        event_log:1:1
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      #      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:9092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      SERVICE_IGNORE: any_value
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9092'
#      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9092,2@kafka2:9093,3@kafka3:9093'
      KAFKA_PROCESS_ROLES: 'broker,controller'

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    build:
      context: ./rabbitmq/.
      dockerfile: Dockerfile
    ports:
      - "5672:5672"
      - "15672:15672"
      - "4369:4369"
      - "25672:25672"
      - "61613:61613"
      - "61614:61614"
      - "55674:55674"
      - "15674:15674"
      - "1883:1883"
      - "15675:15675"
    environment:
      SERVICE_IGNORE: any_value
    command:
      - /etc/rabbitmq/rabbitMqUserCreation.sh

  registrator:
    container_name: registrator
    image: gliderlabs/registrator
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    command: "-internal consul://consul:8500"
    depends_on:
      - consul

  kafka-manager:
    container_name: kafka-manager
    hostname: kafka-manager
    depends_on:
      - zookeeper
      - kafka
    image: rafabsb/kafka-manager-docker
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: letmein
      KM_ARGS: -Djava.net.preferIPv4Stack=true
