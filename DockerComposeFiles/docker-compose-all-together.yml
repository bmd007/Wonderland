version: '3.7'

services:

  rabbitmq:
    hostname: rabbitmq
    build:
      context: .
      dockerfile: RabbitMQwithStompDockerfile
    ports:
      - "5672:5672"
      - "15672:15672"
      - "4369:4369"
      - "25672:25672"
      - "61613:61613"
      - "61614:61614"
    environment:
      SERVICE_IGNORE: any_value

  consul:
    hostname: consul
    image: consul
    ports:
      - '8500:8500'
    environment:
      SERVICE_IGNORE: any_value

  config-center:
    hostname: config-center
    image: bmd007/config-center
    depends_on:
      - consul
    environment:
      SERVICE_8888_NAME: config-center
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_SERVICE_REGISTRY_AUTO_REGISTRATION_ENABLED: "false"
    ports:
      - "8888:8888"

  zookeeper:
    hostname: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      SERVICE_IGNORE: any_value

  kafka:
    hostname: kafka
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_CREATE_TOPICS: >-
        event_log:5:3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT, OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092, OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INSIDE://:9092, OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_PORT: 9092
      JMX_PORT: 9997
      #     KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      SERVICE_9092_NAME: kafka
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka2:
    hostname: kafka2
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092
      KAFKA_LISTENERS: INSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_PORT: 9092
      JMX_PORT: 9997
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka3:
    hostname: kafka3
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092
      KAFKA_LISTENERS: INSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_PORT: 9092
      JMX_PORT: 9997
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-manager:
    depends_on:
      - zookeeper
      - kafka3
      - kafka2
      - kafka
    image: rafabsb/kafka-manager-docker:2.4
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: letmein
      KM_ARGS: -Djava.net.preferIPv4Stack=true

  elasticsearch:
    hostname: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.6
    environment:
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.tcp.port=9300
      - transport.host=0.0.0.0
      - transport.publish_port=9300
      - SERVICE_9300_NAME=elasticsearch
      - SERVICE_9200_NAME=elasticsearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - '9300:9300'
      - '9200:9200'

  kibana:
    hostname: kibana
    depends_on:
      - elasticsearch
    image: docker.elastic.co/kibana/kibana:6.8.6
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://elasticsearch
    ports:
      - '5601:5601'

  neo4j:
    image: neo4j:4.0.6
    hostname: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
      - "6477:6477"
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/logs:/logs
      - ./neo4j/plugins:/plugins
      - ./neo4j/import:/var/lib/neo4j/import
    environment:
      - SERVICE_7473_NAME=neo4j
      - SERVICE_7474_NAME=neo4j
      - SERVICE_7687_NAME=neo4j
      - SERVICE_6477_NAME=neo4j
      - NEO4J_AUTH=neo4j/test
      - NEO4JLABS_PLUGINS=["apoc", "graph-algorithms"]
      - NEO4J_dbms_connector_http_listen__address= :7474
      - NEO4J_dbms_connector_https_listen__address= :6477
      - NEO4J_dbms_connector_bolt_listen__address= :7687
      - NEO4J_dbms_logs_debug_level=DEBUG
      - NEO4J_apoc_import_file_enabled="true"
      #      - NEO4J_HEAP_MEMORY=1G
      #      - NEO4J_CACHE_MEMORY=1G
      - NEO4J_dbms_security_procedures_whitelist= apoc.*, algo.*
      - NEO4J_dbms_security_procedures_unrestricted= apoc.*,algo.*
  #      NEO4J_AUTH: none


  # Registrator to register services in consul
  registrator:
    image: gliderlabs/registrator
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    command: "-internal consul://consul:8500"
    depends_on:
      - consul

  messenger:
    hostname: messenger
    image: bmd007/messenger
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://guest:guest@rabbitmq:55672/api/aliveness-test/"]
#      interval: 6s
#      timeout: 7s
#      retries: 6
    depends_on:
      - consul
      - config-center
      - rabbitmq
      - kafka
      - kafka2
      - kafka3
    environment:
      SERVICE_8081_NAME: messenger
      SPRING_PROFILES_ACTIVE: docker_compose
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_CLOUD_CONSUL_HOST: consul
      CONFIG_SERVER_IP: http://config-center
      HELLO_WORLD_IP: http://hello-world
      CONFIG_SERVER_PORT: 8888
      SPRING_CLOUD_SERVICE_REGISTRY_AUTO_REGISTRATION_ENABLED: "false"
    ports:
      - "8081:8081"

  message-search:
    hostname: message-search
    image: bmd007/message-search
    depends_on:
      - consul
      - config-center
      - messenger
      - helloyee
      - kafka
      - kafka2
      - kafka3
      - elasticsearch
    environment:
      SERVICE_8089_NAME: message-search
      SPRING_PROFILES_ACTIVE: docker_compose
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      SPRING_CLOUD_CONSUL_HOST: consul
      CONFIG_SERVER_IP: http://config-center
      CONFIG_SERVER_PORT: 8888
      SPRING_CLOUD_SERVICE_REGISTRY_AUTO_REGISTRATION_ENABLED: "false"
#      SPRING_ELASTICSEARCH_REST_URIS: http://elasticsearch:9200
      ELASTICSEARCH_REST_IP: "elasticsearch"
    ports:
      - "8089:8089"

  communication-graph:
    hostname: communication-graph
    image: bmd007/communication-graph
    depends_on:
      - consul
      - config-center
      - messenger
      - helloyee
      - kafka
      - kafka2
      - kafka3
      - neo4j
    environment:
      SERVICE_8095_NAME: communication-graph
      SPRING_PROFILES_ACTIVE: docker_compose
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      SPRING_CLOUD_CONSUL_HOST: consul
      CONFIG_SERVER_IP: http://config-center
      CONFIG_SERVER_PORT: 8888
      SPRING_CLOUD_SERVICE_REGISTRY_AUTO_REGISTRATION_ENABLED: "false"
      SPRING_DATA_NEO4J_URI: bolt://neo4j:7687
    ports:
      - "8095:8095"

  message-counter1:
    hostname: message-counter1
    ports:
      - "8222:9585"
      - "8223:9586"
    image: bmd007/message-counter
    depends_on:
      - consul
      - config-center
      - messenger
      - helloyee
      - kafka
      - kafka2
      - kafka3
    environment:
      SERVICE_9585_NAME: message-counter1
      SERVICE_9586_NAME: message-counter1
      SPRING_PROFILES_ACTIVE: docker_compose
      SPRING_CLOUD_CONSUL_HOST: consul
      CONFIG_SERVER_IP: http://config-center
      CONFIG_SERVER_PORT: 8888
      SPRING_CLOUD_SERVICE_REGISTRY_AUTO_REGISTRATION_ENABLED: "false"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_STREAMS_SERVER_CONFIG_APP_IP: message-counter1
      KAFKA_STREAMS_SERVER_CONFIG_APP_PORT: 9585
      SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME: message-counter1

  message_counter2:
    hostname: message-counter2
    ports:
      - "8224:9585"
      - "8225:9586"
    image: bmd007/message-counter
    depends_on:
      - consul
      - config-center
      - messenger
      - helloyee
      - kafka
      - kafka2
      - kafka3
      - message-counter1
    environment:
      SERVICE_9585_NAME: message-counter2
      SERVICE_9586_NAME: message-counter2
      SPRING_PROFILES_ACTIVE: docker_compose
      SPRING_CLOUD_CONSUL_HOST: consul
      CONFIG_SERVER_IP: http://config-center
      CONFIG_SERVER_PORT: 8888
      SPRING_CLOUD_SERVICE_REGISTRY_AUTO_REGISTRATION_ENABLED: "false"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_STREAMS_SERVER_CONFIG_APP_IP: message-counter2
      KAFKA_STREAMS_SERVER_CONFIG_APP_PORT: 9585
      SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME: message-counter2

  message_counter3:
    hostname: message-counter3
    ports:
      - "8226:9585"
      - "8227:9586"
    image: bmd007/message-counter
    depends_on:
      - consul
      - config-center
      - messenger
      - helloyee
      - kafka
      - kafka2
      - kafka3
      - message-counter1
      - message_counter2
    environment:
      SERVICE_9585_NAME: message-counter3
      SERVICE_9586_NAME: message-counter3
      SPRING_PROFILES_ACTIVE: docker_compose
      SPRING_CLOUD_CONSUL_HOST: consul
      CONFIG_SERVER_IP: http://config-center
      CONFIG_SERVER_PORT: 8888
      SPRING_CLOUD_SERVICE_REGISTRY_AUTO_REGISTRATION_ENABLED: "false"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_STREAMS_SERVER_CONFIG_APP_IP: message-counter3
      KAFKA_STREAMS_SERVER_CONFIG_APP_PORT: 9585
      SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME: message-counter3

  helloyee:
    hostname: helloyee
    image: bmd007/helloyee
    depends_on:
      - consul
      - config-center
      - messenger
    environment:
      SERVICE_7461_NAME: helloyee
      SPRING_PROFILES_ACTIVE: docker_compose
      SPRING_CLOUD_CONSUL_HOST: consul
      CONFIG_SERVER_IP: http://config-center
      CONFIG_SERVER_PORT: 8888
      SPRING_CLOUD_SERVICE_REGISTRY_AUTO_REGISTRATION_ENABLED: "false"
    ports:
      - "7461:7461"