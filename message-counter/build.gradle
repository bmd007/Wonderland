plugins {
	id "java"
	id "idea"
	id "org.springframework.boot" version "2.3.1.RELEASE"
	id "io.spring.dependency-management" version "1.0.11.RELEASE"
	id "com.gorylenko.gradle-git-properties" version "2.2.2"
	id "jacoco" //code coverage
}

jacoco {
	toolVersion = "0.8.5"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR5")
}

ext.buildNumber = {
	def buildNumber = System.getenv("VERSION")
	if (buildNumber == null || buildNumber.allWhitespace) {
		buildNumber = "SNAPSHOT"
	}
	return buildNumber
}

project.version = buildNumber()

sourceCompatibility = 14
targetCompatibility = 14

group = 'wonderland'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'

	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	implementation('com.google.guava:guava:31.0.1-jre')

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'com.xebialabs.restito:restito:0.9.4'
	testImplementation('org.mockito:mockito-junit-jupiter')
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

springBoot {
	buildInfo()
}

task printVersion {
	doLast {
		println project.version
	}
}

wrapper {
	gradleVersion = "6.5"
	distributionType = Wrapper.DistributionType.ALL
}

bootJar {
	layered()
	layered {
		includeLayerTools = false
	}
}

bootBuildImage {
//	imageName = "bmd007/${project.name}:${project.version}"
	imageName = "bmd007/${project.name}"
	environment = ["BP_JVM_VERSION" : "14.0.1"]
}
